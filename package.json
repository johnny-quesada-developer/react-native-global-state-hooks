{
  "name": "react-native-global-state-hooks",
  "version": "11.0.1",
  "description": "This is a package to easily handling global-state across your react-native-components No-redux... The library now includes @react-native-async-storage/async-storage to persist your state across sessions... if you want to keep using the old version without async-storage or react-native dependencies just use version 5.0.15 or user react-hooks-global-states instead",
  "main": "./bundle.js",
  "types": "./index.d.ts",
  "sideEffects": false,
  "exports": {
    ".": {
      "import": "./bundle.js",
      "require": "./bundle.js",
      "types": "./index.d.ts"
    },
    "./asyncStorageWrapper": {
      "import": "./asyncStorageWrapper.js",
      "require": "./asyncStorageWrapper.js",
      "types": "./asyncStorageWrapper.d.ts"
    },
    "./createContext": {
      "import": "./createContext.js",
      "require": "./createContext.js",
      "types": "./createContext.d.ts"
    },
    "./createCustomGlobalState": {
      "import": "./createCustomGlobalState.js",
      "require": "./createCustomGlobalState.js",
      "types": "./createCustomGlobalState.d.ts"
    },
    "./createGlobalState": {
      "import": "./createGlobalState.js",
      "require": "./createGlobalState.js",
      "types": "./createGlobalState.d.ts"
    },
    "./generateStackHash": {
      "import": "./generateStackHash.js",
      "require": "./generateStackHash.js",
      "types": "./generateStackHash.d.ts"
    },
    "./getAsyncStorageItem": {
      "import": "./getAsyncStorageItem.js",
      "require": "./getAsyncStorageItem.js",
      "types": "./getAsyncStorageItem.d.ts"
    },
    "./setAsyncStorageItem": {
      "import": "./setAsyncStorageItem.js",
      "require": "./setAsyncStorageItem.js",
      "types": "./setAsyncStorageItem.d.ts"
    },
    "./GlobalStore": {
      "import": "./GlobalStore.js",
      "require": "./GlobalStore.js",
      "types": "./GlobalStore.d.ts"
    },
    "./GlobalStoreAbstract": {
      "import": "./GlobalStoreAbstract.js",
      "require": "./GlobalStoreAbstract.js",
      "types": "./GlobalStoreAbstract.d.ts"
    },
    "./isRecord": {
      "import": "./isRecord.js",
      "require": "./isRecord.js",
      "types": "./isRecord.d.ts"
    },
    "./shallowCompare": {
      "import": "./shallowCompare.js",
      "require": "./shallowCompare.js",
      "types": "./shallowCompare.d.ts"
    },
    "./throwWrongKeyOnActionCollectionConfig": {
      "import": "./throwWrongKeyOnActionCollectionConfig.js",
      "require": "./throwWrongKeyOnActionCollectionConfig.js",
      "types": "./throwWrongKeyOnActionCollectionConfig.d.ts"
    }
  },
  "files": [
    "*.js",
    "*.d.ts"
  ],
  "scripts": {
    "test:debug:no-watch": "node --inspect-brk node_modules/.bin/jest --no-watchman --runInBand",
    "test:debug": "node --inspect-brk node_modules/.bin/jest --watch --runInBand",
    "test:quick": "jest --maxWorkers=4 -c --no-watchman -u",
    "test:coverage": "jest --maxWorkers=4 -c --colors --no-watchman --verbose --coverage",
    "build": "yarn clean && webpack --config webpack.config.js",
    "prepare": "npm run build",
    "version": "npm run format && git add -A src",
    "postversion": "git push && git push --tags",
    "lint": "eslint src --ext .js,.jsx,.ts,.tsx --max-warnings=0",
    "lint:fix": "eslint --fix src  --ext .js,.jsx,.ts,.tsx --max-warnings=0",
    "clean": "find . -maxdepth 1 -type f \\( -name '*.js' -o -name '*.d.ts' \\) ! -name 'webpack.config.js' -exec rm {} +"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/johnny-quesada-developer/react-native-global-state-hooks.git"
  },
  "keywords": [
    "react",
    "redux",
    "state",
    "useState",
    "useContext",
    "global-state",
    "context",
    "typescript",
    "react-native",
    "async-storage"
  ],
  "author": "Johnny Quesada",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/johnny-quesada-developer/react-native-global-state-hooks/issues"
  },
  "homepage": "https://github.com/johnny-quesada-developer/react-native-global-state-hooks#readme",
  "devDependencies": {
    "@babel/core": "^7.21.3",
    "@babel/plugin-proposal-export-namespace-from": "^7.18.9",
    "@babel/plugin-transform-modules-commonjs": "^7.21.2",
    "@babel/preset-env": "^7.20.2",
    "@babel/preset-react": "^7.18.6",
    "@babel/preset-typescript": "^7.21.0",
    "@react-native-async-storage/async-storage": ">=1.17.11",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/react": "^16.3.0",
    "@types/jest": "^29.5.11",
    "@types/lodash": "^4.14.165",
    "@types/react": "^18.0.38",
    "@types/react-dom": "^18.0.11",
    "@types/react-test-renderer": "^18.0.0",
    "@typescript-eslint/eslint-plugin": "^4.9.1",
    "@typescript-eslint/parser": "^4.9.1",
    "babel-loader": "^9.1.2",
    "clean-webpack-plugin": "^4.0.0",
    "easy-cancelable-promise": "^1.0.2",
    "eslint": "^7.15.0",
    "eslint-config-airbnb": "^18.2.1",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jsx-a11y": "^6.4.1",
    "eslint-plugin-react": "^7.21.5",
    "eslint-plugin-react-hooks": "^4.2.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "json-storage-formatter": "^2.0.9",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-native": ">=0.71.6",
    "react-test-renderer": "^18.2.0",
    "ts-jest": "^29.1.1",
    "ts-loader": "^9.4.2",
    "tslib": "^2.5.0",
    "typescript": "^5.3.3",
    "webpack": "^5.76.3",
    "webpack-cli": "^5.0.1"
  },
  "peerDependencies": {
    "@react-native-async-storage/async-storage": ">=1.17.11",
    "json-storage-formatter": "^2.0.5",
    "react": ">=17.0.0",
    "react-native": ">=0.71.6"
  },
  "peerDependenciesMeta": {
    "react": {
      "optional": false
    },
    "react-native": {
      "optional": false
    },
    "@react-native-async-storage/async-storage": {
      "optional": true
    },
    "json-storage-formatter": {
      "optional": false
    }
  },
  "dependencies": {
    "react-hooks-global-states": "^9.0.1"
  }
}
